<!-- views/products.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>All Products</title>
  <link rel="stylesheet" href="styles.css">
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 20px;
    }

    .container {
      max-width: 800px;
      margin: 0 auto;
    }

    .product {
      background-color: #fff;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
      margin-bottom: 20px;
    }

    .product-info {
      font-size: 18px;
      margin-bottom: 10px;
    }

    .product-info strong {
      font-weight: bold;
    }

    .product-description {
      margin-top: 10px;
    }

    .product-actions {
      margin-top: 20px;
    }

    .product-actions button {
      padding: 8px 16px;
      font-size: 14px;
      cursor: pointer;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      transition: background-color 0.3s;
    }

    .product-actions button:hover {
      background-color: #0056b3;
    }
    .search-container {
      margin-bottom: 20px;
    }

    .search-input {
      padding: 8px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 5px;
      width: 300px;
    }

    .search-button {
      padding: 8px 16px;
      font-size: 16px;
      cursor: pointer;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      transition: background-color 0.3s;
    }

    .search-button:hover {
      background-color: #0056b3;
    }
  </style>
</head>
<body>
    <header>
        <h1>Product Management System</h1>
        <nav>
          <button onclick="window.location.href='/';">Home</button>
          <button onclick="window.location.href='/create-post';">Create Product</button>
          <button onclick="window.location.href='/posts';">See Products</button>
        </nav>
      </header>
    <div class="container">
        <!-- Search bar -->
        <div class="search-container">
          <input type="text" id="searchInput" class="search-input" placeholder="Search by name...">
          <button id="searchButton" class="search-button">Search</button>
        </div>
    
        <h1>All Products</h1>
        <% products.forEach(product => { %>
          <div class="product">
            <div class="product-info">
              <p><strong>Name:</strong> <%= product.name %></p>
              <p><strong>Price:</strong> <%= product.price %></p>
            </div>
            <div class="s" style="display: none;">
                <p><strong><%= product.name %></strong></p>
              </div>
            <div class="product-description">
              <p><strong>Description:</strong> <%= product.description %></p>
            </div>
            <div class="product-actions">
              <!-- Add the delete button with a form -->
              <form >
                <button class="delete-button" data-product-id="<%= product._id %>">Delete</button>
              </form>
            </div>
          </div>
        <% }); %>
      </div>
    
      <script>
        document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('searchInput');
    const searchButton = document.getElementById('searchButton');

    searchButton.addEventListener('click', () => {
      const searchValue = searchInput.value.trim().toLowerCase();
      console.log('Search Query:', searchValue); // Debugging statement
      const products = document.querySelectorAll('.product');

      products.forEach(product => {
        const productName = product.querySelector('.s').querySelector('strong').textContent.toLowerCase();
        console.log('Product Name:', productName); // Debugging statement
        if (productName.includes(searchValue)) {
          console.log('Match found!'); // Debugging statement
          product.style.display = 'block'; // Show matching products
        } else {
          console.log('No match found!'); // Debugging statement
          product.style.display = 'none'; // Hide non-matching products
        }
      });
    });
  });

    ///
    document.addEventListener('DOMContentLoaded', () => {
  const deleteButtons = document.querySelectorAll('.delete-button');
  deleteButtons.forEach(button => {
    button.addEventListener('click', () => {
      const productId = button.dataset.productId;
      if (confirm('Are you sure you want to delete this product?')) {
        fetch(`/delete/${productId}`, {
          method: 'DELETE'
        })
        .then(response => {
          if (response.ok) {
            // Product deleted successfully, update UI as needed
            // For example, remove the deleted product from the DOM
            button.closest('.product').remove();
          } else {
            // Handle error response
            console.error('Error deleting product:', response.statusText);
          }
        })
        .catch(error => {
          console.error('Error deleting product:', error);
        });
      }
    });
  });
});
      </script>
</body>
</html>
